name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ '3.10', '3.11' ]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-py${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'tox>=4,<5' 'tox-gh-actions>=3,<4'

      - name: Test using tox
        run: tox

      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: .coverage.*
          retention-days: 1
          if-no-files-found: error

  reports:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Python version
        id: python
        run: echo "version=3.10" >> $GITHUB_OUTPUT

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        id: py
        with:
          python-version: ${{ steps.python.outputs.version }}

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: pip cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-py${{ steps.python.outputs.version }}-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-py$${{ steps.python.outputs.version }}-
            ${{ runner.os }}-pip-py

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install 'tox ~= 4.0' 'tox-gh-actions ~= 3.0'

      - name: Download .coverage data from tests
        uses: actions/download-artifact@v3
        with:
          name: coverage

      - name: Create flake8 & HTML coverage report using tox
        run: tox -e reports

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v3
        with:
          name: htmlcov
          path: htmlcov/
          retention-days: 90
          if-no-files-found: error
